gdf
df = read.csv(paste("./Build/temp/osrmbias/bias_", country, ".csv"))
df
nrow(df)
sunnmd_df = data.frame("country" = NA, "s_unnamed" = NA, "cor" = NA, "corp" = NA, "withinvar" = NA)
gmaps_df = data.frame("from" = NA, "to" = NA, "dist" = NA, "dur" = NA, "share_unnamed" = NA, "X.gmapdist." = NA,  "X.gmapdur." = NA,    "popfrom" = NA,      "popto" = NA,     "speed" = NA,       "popm" = NA, "country" = NA)
row = 1
for(country in country_names){
df = read.csv(paste("./Build/temp/osrmbias/bias_", country, ".csv"))
if(nrow(df) > 2){
case_c <- read.csv(paste0("./Build/temp/borderregions/", country, "_borderregion.csv"))
for(i in unique(df$from)){
df[df$from == i,"popfrom"] = case_c[i,"pop"]
df[df$to == i,"popto"] = case_c[i,"pop"]
}
df$speed = df$dist / df$dur
df$popm =( df$popfrom + df$popto ) / 2
cor = cor.test(df$popm, df$share_unnamed)
wmean = weighted.mean(df$share_unnamed, w = df$dist)
if(!is.na(wmean)){
sunnmd_df[row,] = c(country, wmean, cor$estimate, cor$p.value, sd(df$share_unnamed))
row = row+1
}
gdf = df[!is.na(df$X.gmapdist.),]
if(nrow(gdf)>0){
gdf$country = country
gdf$country = country
gmaps_df = rbind(gmaps_df, gdf)
}
}
}
gdf
gmaps_df
plot(gmaps_df$popm, gmaps_df$dist)
plot(log(gmaps_df$popm), gmaps_df$dist/gmaps_df$dur)
points(log(gmaps_df$popm), gmaps_df$X.gmapdist./gmaps_df$X.gmapdur., col = "red")
gmaps_df$X.gmapdist./gmaps_df$X.gmapdur.
gmaps_df$gspeed = (gmaps_df$X.gmapdist./1000) / (gmaps_df$X.gmapdur./3600)
gmaps_df$speed = gmaps_df$dist/gmaps_df$dur
gmaps_df$gspeed = (gmaps_df$X.gmapdist./1000) / (gmaps_df$X.gmapdur./3600)
gmaps_df
gmaps_df$speed = gmaps_df$dist/(gmaps_df$dur/60)
gmaps_df
plot(log(gmaps_df$popm), gmaps_df$dist/gmaps_df$dur)
points(log(gmaps_df$popm), gmaps_df$X.gmapdist./gmaps_df$X.gmapdur., col = "red")
plot(log(gmaps_df$popm), gmaps_df$speed)
points(log(gmaps_df$popm), gmaps_df$gspeed, col = "red")
mean(gmaps_df$speed)
mean(gmaps_df$speed, na.rm = T)
mean(gmaps_df$gspeed, na.rm = T)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed")
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = "purple4")
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = "purple4", pch = 21)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = "purple4", pch = 19)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = "purple4", pch = 21)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = "purple4", pch = 20)
?pch
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = "purple4", pch = 21)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", bg = "purple4", pch = 21)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", bg = alpha("purple4", .2), pch = 21)
require(scalse)
require(scales)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", bg = alpha("purple4", .2), pch = 21)
lava
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", bg = alpha("purple4", .2), pch = 21)
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .2))
points(log(gmaps_df$popm), gmaps_df$gspeed, bg = alpha("tomato2", .2), pch = 21)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", bg = alpha("purple4", .7), pch = 21)
points(log(gmaps_df$popm), gmaps_df$gspeed, bg = alpha("tomato2", .7), pch = 21)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .7), pch = 21)
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .7), pch = 21)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", 1), pch = 21)
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", 1), pch = 21)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", 1), pch = 19)
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", 1), pch = 19)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19)
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, legend(
"bottomright", cols = c(alpha("purple4", .6), col = alpha("tomato2", .6), pch= 19, legend = c("OSM", "Google Maps"))
))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, legend(
"bottomright", cols = c(alpha("purple4", .6), alpha("tomato2", .6), pch= 19, legend = c("OSM", "Google Maps"))
))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, legend(
"bottomright", cols = c(alpha("purple4", .6), alpha("tomato2", .6)), pch= 19, legend = c("OSM", "Google Maps")
))
cols = c(alpha("purple4", .6), alpha("tomato2", .6))
legend(
"bottomright", cols = c(alpha("purple4", .6), alpha("tomato2", .6)), pch= 19, legend = c("OSM", "Google Maps")
))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, legend(
"bottomright", cols = c(alpha("purple4", .6), alpha("tomato2", .6)), pch= 19, labels = c("OSM", "Google Maps")
))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, legend(
"bottomright", col = c(alpha("purple4", .6), alpha("tomato2", .6)), pch= 19, labels = c("OSM", "Google Maps")
))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, legend(
"bottomright", col = c(alpha("purple4", .6), alpha("tomato2", .6)), pch= 19, legend = c("OSM", "Google Maps")
))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, legend(
"bottomright", col = c(alpha("purple4", .6), alpha("tomato2", .6)), pch= 19, legend = c("OSM", "Google Maps")
))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, legend("bottomright", col = c(alpha("purple4", .6), alpha("tomato2", .6)), pch= 19, legend = c("OSM", "Google Maps")))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19), legend("bottomright", col = c(alpha("purple4", .6), alpha("tomato2", .6)), pch= 19, legend = c("OSM", "Google Maps"))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, legend("bottomright", col = c(alpha("purple4", .6), alpha("tomato2", .6)), pch= 19, legend = c("OSM", "Google Maps")))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, legend("bottomright", pch= 19, legend = c("OSM", "Google Maps")))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19)
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19)
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
abline(lm(gmaps_df$speed~log(gmaps_df$popm)))
abline(lm(gmaps_df$speed~log(gmaps_df$popm)), col = "purple4")
abline(lm(gmaps_df$gspeed~log(gmaps_df$popm)), col = "tomato2")
sunnmd_df = data.frame("country" = NA, "s_unnamed" = NA, "cor" = NA, "corp" = NA, "withinvar" = NA)
gmaps_df = data.frame("from" = NA, "to" = NA, "dist" = NA, "dur" = NA, "share_unnamed" = NA, "X.gmapdist." = NA,  "X.gmapdur." = NA,    "popfrom" = NA,      "popto" = NA,     "speed" = NA,       "popm" = NA, "country" = NA)
row = 1
for(country in country_names){
df = read.csv(paste("./Build/temp/osrmbias/bias_", country, ".csv"))
if(nrow(df) > 2){
case_c <- read.csv(paste0("./Build/temp/borderregions/", country, "_borderregion.csv"))
for(i in unique(df$from)){
df[df$from == i,"popfrom"] = case_c[i,"pop"]
df[df$to == i,"popto"] = case_c[i,"pop"]
}
df$speed = df$dist / df$dur
df$popm =( df$popfrom + df$popto ) / 2
cor = cor.test(df$popm, df$share_unnamed)
wmean = weighted.mean(df$share_unnamed, w = df$dist)
if(!is.na(wmean)){
sunnmd_df[row,] = c(country, wmean, cor$estimate, cor$p.value, sd(df$share_unnamed))
row = row+1
}
gdf = df[!is.na(df$X.gmapdist.),]
if(nrow(gdf)>0){
gdf$country = country
gdf$country = country
gmaps_df = rbind(gmaps_df, gdf)
}
}
}
gmaps_df$speed = gmaps_df$dist/(gmaps_df$dur/60)
gmaps_df$gspeed = (gmaps_df$X.gmapdist./1000) / (gmaps_df$X.gmapdur./3600)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19)
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
abline(lm(gmaps_df$gspeed~log(gmaps_df$popm)), col = "tomato2")
gmaps_df = gmaps_df[gmaps_df$popm>1,]
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19)
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
abline(lm(gmaps_df$gspeed~log(gmaps_df$popm)), col = "tomato2")
abline(lm(gmaps_df$speed~log(gmaps_df$popm)), col = "purple4")
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n", xlim = c(7.5, 15))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19)
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n", xlim = c(7.5, 15))
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
abline(lm(gmaps_df$gspeed~log(gmaps_df$popm)), col = "tomato2")
abline(lm(gmaps_df$speed~log(gmaps_df$popm)), col = "purple4")
require(scales)
require(scales)
for(country in country_names){
df = read.csv(paste("./Build/temp/osrmbias/bias_", country, ".csv"))
if(nrow(df) > 2){
case_c <- read.csv(paste0("./Build/temp/borderregions/", country, "_borderregion.csv"))
for(i in unique(df$from)){
df[df$from == i,"popfrom"] = case_c[i,"pop"]
df[df$to == i,"popto"] = case_c[i,"pop"]
}
df$speed = df$dist / df$dur
df$popm =( df$popfrom + df$popto ) / 2
cor = cor.test(df$popm, df$share_unnamed)
wmean = weighted.mean(df$share_unnamed, w = df$dist)
if(!is.na(wmean)){
sunnmd_df[row,] = c(country, wmean, cor$estimate, cor$p.value, sd(df$share_unnamed))
row = row+1
}
gdf = df[!is.na(df$X.gmapdist.),]
if(nrow(gdf)>0){
gdf$country = country
gdf$country = country
gmaps_df = rbind(gmaps_df, gdf)
}
}
}
require(scales)
sunnmd_df = data.frame("country" = NA, "s_unnamed" = NA, "cor" = NA, "corp" = NA, "withinvar" = NA)
gmaps_df = data.frame("from" = NA, "to" = NA, "dist" = NA, "dur" = NA, "share_unnamed" = NA, "X.gmapdist." = NA,  "X.gmapdur." = NA,    "popfrom" = NA,      "popto" = NA,     "speed" = NA,       "popm" = NA, "country" = NA)
row = 1
for(country in country_names){
df = read.csv(paste("./Build/temp/osrmbias/bias_", country, ".csv"))
if(nrow(df) > 2){
case_c <- read.csv(paste0("./Build/temp/borderregions/", country, "_borderregion.csv"))
for(i in unique(df$from)){
df[df$from == i,"popfrom"] = case_c[i,"pop"]
df[df$to == i,"popto"] = case_c[i,"pop"]
}
df$speed = df$dist / df$dur
df$popm =( df$popfrom + df$popto ) / 2
cor = cor.test(df$popm, df$share_unnamed)
wmean = weighted.mean(df$share_unnamed, w = df$dist)
if(!is.na(wmean)){
sunnmd_df[row,] = c(country, wmean, cor$estimate, cor$p.value, sd(df$share_unnamed))
row = row+1
}
gdf = df[!is.na(df$X.gmapdist.),]
if(nrow(gdf)>0){
gdf$country = country
gdf$country = country
gmaps_df = rbind(gmaps_df, gdf)
}
}
}
gmaps_df$speed = gmaps_df$dist/(gmaps_df$dur/60)
gmaps_df$gspeed = (gmaps_df$X.gmapdist./1000) / (gmaps_df$X.gmapdur./3600)
gmaps_df = gmaps_df[gmaps_df$popm>1,]
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
abline(lm(gmaps_df$gspeed~log(gmaps_df$popm)), col = "tomato2")
abline(lm(gmaps_df$speed~log(gmaps_df$popm)), col = "purple4")
t.test(gmaps_df$speed, gmaps_df$gspeed)
plot(gmaps_df$speed, gmaps_df$gspeed)
abline(a = 0, b= 1)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("darkred", .6), pch = 19, ang = 1)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("darkred", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100))
abline(a = 0, b= 1)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("darkred", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100), bty = "n")
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("darkred", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100), bty = "n", xlab = "OSM Speed" ,ylab = "Google Maps Speed")
abline(a = 0, b= 1)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("burlywood", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100), bty = "n", xlab = "OSM Speed" ,ylab = "Google Maps Speed")
abline(a = 0, b= 1)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("chocolate2", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100), bty = "n", xlab = "OSM Speed" ,ylab = "Google Maps Speed")
abline(a = 0, b= 1)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("chocolate2", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100), bty = "n", xlab = "OSM Speed" ,ylab = "Google Maps Speed")
abline(a = 0, b= 1, col = "darkred", lty = 2)
glm = lm(gmaps_df$gspeed~log(gmaps_df$popm))
newx = seq(min(x),max(x),by = 0.05)
newx = seq(min(x),max(x),by = 0.05)
glm = lm(gmaps_df$gspeed~log(gmaps_df$popm))
newx = seq(7,15,by = 0.05)
glm = lm(gmaps_df$gspeed~log(gmaps_df$popm))
conf_interval <- predict(glm, newdata=data.frame(x=newx), interval="confidence",
level = 0.95)
glm = lm(gmaps_df$gspeed~log(gmaps_df$popm))
conf_interval <- predict(glm, newdata=data.frame(x=newx), interval="confidence",
level = 0.95)
newdata
conf_interval
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
newx = seq(7,15,by = 0.05)
glm = lm(gmaps_df$gspeed~log(gmaps_df$popm))
conf_interval <- predict(glm, newdata=data.frame(x=newx), interval="confidence",
level = 0.95)
lines(newx, conf_interval[,2], col="blue", lty=2)
points(newx, conf_interval[,2])
glm = lm(gmaps_df$gspeed~log(gmaps_df$popm))
glm
conf_interval <- predict(glm, newdata=data.frame(log(gmaps_df$popm)  =newx), interval="confidence",
conf_interval <- predict(glm, newdata=data.frame( "log(gmaps_df$popm)"=newx), interval="confidence",
level = 0.95)
newx
length(newx)
data.frame( "log(gmaps_df$popm)"=newx)
conf_interval <- predict(glm, newdata=data.frame( log.gmaps_df.popm.=newx), interval="confidence",
level = 0.95)
gmaps_df$lgspeed = log(gmaps_df$gspeed)
glm = lm(gmaps_df$gspeed~gmaps_df$lgspeed)
conf_interval <- predict(glm, newdata=data.frame( lgspeed=newx), interval="confidence", level = 0.95)
conf_interval
newx
data.frame(lgspeed=newx)
glm
glm = lm(gspeed~lgspeed, data = gmaps_df)
hlm
glm
conf_interval <- predict(glm, newdata=data.frame(lgspeed=newx), interval="confidence", level = 0.95)
points(newx, conf_interval[,2])
conf_interval
newx
gmaps_df$lpop = log(gmaps_df$popm)
glm = lm(gspeed~lpop, data = gmaps_df)
conf_interval <- predict(glm, newdata=data.frame(lgspeed=newx), interval="confidence", level = 0.95)
gmaps_df$speed = gmaps_df$dist/(gmaps_df$dur/60)
gmaps_df$gspeed = (gmaps_df$X.gmapdist./1000) / (gmaps_df$X.gmapdur./3600)
gmaps_df = gmaps_df[gmaps_df$popm>1,]
gmaps_df$lpop = log(gmaps_df$popm)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
newx = seq(7,15,by = 0.05)
glm = lm(gspeed~lpop, data = gmaps_df)
conf_interval <- predict(glm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
points(newx, conf_interval[,2])
points(newx, conf_interval[,3])
abline(glm, col = "tomato2")
glm = lm(gspeed~lpop, data = gmaps_df)
gconf_interval <- predict(glm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
olm = lm(gspeed~lpop, data = gmaps_df)
oconf_interval <- predict(olm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
gconf_interval <- predict(glm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2))
abline(glm, col = "tomato2", lwd = 2)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), bty = "n")
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = F)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = "")
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = NA)
abline(glm, col = "tomato2", lwd = 2)
polygon(x = c(newx, rev(newx)), y = c(oconf_interval[,2], rev(oconf_interval[,3])), col = alpha("purple4", .2), border = NA)
olm = lm(speed~lpop, data = gmaps_df)
oconf_interval <- predict(olm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = NA)
polygon(x = c(newx, rev(newx)), y = c(oconf_interval[,2], rev(oconf_interval[,3])), col = alpha("purple4", .2), border = NA)
abline(glm, col = "tomato2", lwd = 2)
abline(lm(gmaps_df$speed~log(gmaps_df$popm)), col = "purple4")
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = NA)
polygon(x = c(newx, rev(newx)), y = c(oconf_interval[,2], rev(oconf_interval[,3])), col = alpha("purple4", .2), border = NA)
abline(glm, col = "tomato2", lwd = 2)
abline(olm, col = "purple4", lwd = 2)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("chocolate2", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100), bty = "n", xlab = "OSM Speed" ,ylab = "Google Maps Speed")
abline(a = 0, b= 1, col = "darkred", lty = 2)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = NA)
polygon(x = c(newx, rev(newx)), y = c(oconf_interval[,2], rev(oconf_interval[,3])), col = alpha("purple4", .2), border = NA)
abline(glm, col = "tomato2", lwd = 2)
abline(olm, col = "purple4", lwd = 2)
newx = seq(7,17,by = 0.05)
glm = lm(gspeed~lpop, data = gmaps_df)
gconf_interval <- predict(glm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
olm = lm(speed~lpop, data = gmaps_df)
oconf_interval <- predict(olm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = NA)
polygon(x = c(newx, rev(newx)), y = c(oconf_interval[,2], rev(oconf_interval[,3])), col = alpha("purple4", .2), border = NA)
abline(glm, col = "tomato2", lwd = 2)
abline(olm, col = "purple4", lwd = 2)
sunnmd_df = data.frame("country" = NA, "s_unnamed" = NA, "cor" = NA, "corp" = NA, "withinvar" = NA)
gmaps_df = data.frame("from" = NA, "to" = NA, "dist" = NA, "dur" = NA, "share_unnamed" = NA, "X.gmapdist." = NA,  "X.gmapdur." = NA,    "popfrom" = NA,      "popto" = NA,     "speed" = NA,       "popm" = NA, "country" = NA)
row = 1
for(country in country_names){
df = read.csv(paste("./Build/temp/osrmbias/bias_", country, ".csv"))
if(nrow(df) > 2){
case_c <- read.csv(paste0("./Build/temp/borderregions/", country, "_borderregion.csv"))
for(i in unique(df$from)){
df[df$from == i,"popfrom"] = case_c[i,"pop"]
df[df$to == i,"popto"] = case_c[i,"pop"]
}
df$speed = df$dist / df$dur
df$popm =( df$popfrom + df$popto ) / 2
cor = cor.test(df$popm, df$share_unnamed)
wmean = weighted.mean(df$share_unnamed, w = df$dist)
if(!is.na(wmean)){
sunnmd_df[row,] = c(country, wmean, cor$estimate, cor$p.value, sd(df$share_unnamed))
row = row+1
}
gdf = df[!is.na(df$X.gmapdist.),]
if(nrow(gdf)>0){
gdf$country = country
gdf$country = country
gmaps_df = rbind(gmaps_df, gdf)
}
}
}
gmaps_df$speed = gmaps_df$dist/(gmaps_df$dur/60)
gmaps_df$gspeed = (gmaps_df$X.gmapdist./1000) / (gmaps_df$X.gmapdur./3600)
gmaps_df = gmaps_df[gmaps_df$popm>1,]
gmaps_df$lpop = log(gmaps_df$popm)
newx = seq(7,17,by = 0.05)
glm = lm(gspeed~lpop, data = gmaps_df)
gconf_interval <- predict(glm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
olm = lm(speed~lpop, data = gmaps_df)
oconf_interval <- predict(olm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = NA)
polygon(x = c(newx, rev(newx)), y = c(oconf_interval[,2], rev(oconf_interval[,3])), col = alpha("purple4", .2), border = NA)
abline(glm, col = "tomato2", lwd = 2)
abline(olm, col = "purple4", lwd = 2)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n", ylim = c(0, 100))
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15) , ylim = c(0, 100))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = NA)
polygon(x = c(newx, rev(newx)), y = c(oconf_interval[,2], rev(oconf_interval[,3])), col = alpha("purple4", .2), border = NA)
abline(glm, col = "tomato2", lwd = 2)
abline(olm, col = "purple4", lwd = 2)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("chocolate2", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100), bty = "n", xlab = "OSM Speed" ,ylab = "Google Maps Speed")
abline(a = 0, b= 1, col = "darkred", lty = 2)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("chocolate2", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100), bty = "n", xlab = "OSM Speed" ,ylab = "Google Maps Speed")
abline(a = 0, b= 1, col = "darkred", lty = 2, lwd = 2)
pdf("./Build/output/osmbias/osm_gmaps_lpop.pdf", width = 8, height = 7)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15) , ylim = c(0, 100))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = NA)
polygon(x = c(newx, rev(newx)), y = c(oconf_interval[,2], rev(oconf_interval[,3])), col = alpha("purple4", .2), border = NA)
abline(glm, col = "tomato2", lwd = 2)
abline(olm, col = "purple4", lwd = 2)
dev.off()
pdf("./Build/output/osmbias/osm_gmaps.pdf", width = 8, height = 7)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("chocolate2", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100), bty = "n", xlab = "OSM Speed" ,ylab = "Google Maps Speed")
abline(a = 0, b= 1, col = "darkred", lty = 2, lwd = 2)
dev.off()
gmaps_df$speed
gmaps_df$gspeed
t.test(gspeed, speed, data = gmaps_df)
t.test(gmaps_df[gmaps_df$popm > 10000, "gspeed"], gmaps_df[gmaps_df$popm > 10000, "speed"])
log(10000)
exp(10)
t.test(gmaps_df[gmaps_df$popm > 20000, "gspeed"], gmaps_df[gmaps_df$popm > 20000, "speed"])
t.test(gmaps_df[gmaps_df$popm > 50000, "gspeed"], gmaps_df[gmaps_df$popm > 50000, "speed"])
t.test(gmaps_df[gmaps_df$popm > 25000, "gspeed"], gmaps_df[gmaps_df$popm > 25000, "speed"])
require(scales)
sunnmd_df = data.frame("country" = NA, "s_unnamed" = NA, "cor" = NA, "corp" = NA, "withinvar" = NA)
gmaps_df = data.frame("from" = NA, "to" = NA, "dist" = NA, "dur" = NA, "share_unnamed" = NA, "X.gmapdist." = NA,  "X.gmapdur." = NA,    "popfrom" = NA,      "popto" = NA,     "speed" = NA,       "popm" = NA, "country" = NA)
row = 1
for(country in country_names){
df = read.csv(paste("./Build/temp/osrmbias/bias_", country, ".csv"))
if(nrow(df) > 2){
case_c <- read.csv(paste0("./Build/temp/borderregions/", country, "_borderregion.csv"))
for(i in unique(df$from)){
df[df$from == i,"popfrom"] = case_c[i,"pop"]
df[df$to == i,"popto"] = case_c[i,"pop"]
}
df$speed = df$dist / df$dur
df$popm =( df$popfrom + df$popto ) / 2
cor = cor.test(df$popm, df$share_unnamed)
wmean = weighted.mean(df$share_unnamed, w = df$dist)
if(!is.na(wmean)){
sunnmd_df[row,] = c(country, wmean, cor$estimate, cor$p.value, sd(df$share_unnamed))
row = row+1
}
gdf = df[!is.na(df$X.gmapdist.),]
if(nrow(gdf)>0){
gdf$country = country
gdf$country = country
gmaps_df = rbind(gmaps_df, gdf)
}
}
}
gmaps_df$speed = gmaps_df$dist/(gmaps_df$dur/60)
gmaps_df$gspeed = (gmaps_df$X.gmapdist./1000) / (gmaps_df$X.gmapdur./3600)
gmaps_df = gmaps_df[gmaps_df$popm>1,]
gmaps_df$lpop = log(gmaps_df$popm)
newx = seq(7,17,by = 0.05)
glm = lm(gspeed~lpop, data = gmaps_df)
gconf_interval <- predict(glm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
olm = lm(speed~lpop, data = gmaps_df)
oconf_interval <- predict(olm, newdata=data.frame(lpop=newx), interval="confidence", level = 0.95)
pdf("./Build/output/osmbias/osm_gmaps_lpop.pdf", width = 8, height = 7)
plot(log(gmaps_df$popm), gmaps_df$speed, bty = "n", xlab = "log Population", ylab = "Speed", col = alpha("purple4", .6), pch = 19, xlim = c(7.5, 15) , ylim = c(0, 100))
legend("bottomright", pch= 19, legend = c("OSM", "Google Maps"), col = c("purple4", "tomato2"), bty = "n")
points(log(gmaps_df$popm), gmaps_df$gspeed, col = alpha("tomato2", .6), pch = 19)
polygon(x = c(newx, rev(newx)), y = c(gconf_interval[,2], rev(gconf_interval[,3])), col = alpha("tomato2", .2), border = NA)
polygon(x = c(newx, rev(newx)), y = c(oconf_interval[,2], rev(oconf_interval[,3])), col = alpha("purple4", .2), border = NA)
abline(glm, col = "tomato2", lwd = 2)
abline(olm, col = "purple4", lwd = 2)
dev.off()
pdf("./Build/output/osmbias/osm_gmaps.pdf", width = 8, height = 7)
plot(gmaps_df$speed, gmaps_df$gspeed, col = alpha("chocolate2", .6), pch = 19, ylim = c(0, 100), xlim = c(0,100), bty = "n", xlab = "OSM Speed" ,ylab = "Google Maps Speed")
abline(a = 0, b= 1, col = "darkred", lty = 2, lwd = 2)
dev.off()
t.test(gmaps_df[gmaps_df$popm > 25000, "gspeed"], gmaps_df[gmaps_df$popm > 25000, "speed"])
t.test(gmaps_df[gmaps_df$popm > 40000, "gspeed"], gmaps_df[gmaps_df$popm > 40000, "speed"])
t.test(gmaps_df[gmaps_df$popm > 50000, "gspeed"], gmaps_df[gmaps_df$popm > 50000, "speed"])
install.packages("reshape2")
install.packages("stargazer")
?weighted.mean
x = data.frame("bef" = c(0.8, 0.3, 0.7), "aft" = c(0.9, 0.35, 0.6), "pop" = 1:3)
x
x$zeta = x$aft / x$bef
x
sum(x$zeta * x$pop) / sum(x$pop)
sum(x$pop * x$aft) / sum(x$pop * x$aft)
sum(x$pop * x$aft) / sum(x$pop * x$bef)
x = read.csv("/Users/tilmangraff/Documents/GitHub/Thesis_Git/Build/output/Network_outcomes/Burundi_outcomes.csv")
x
sum(x$util_opt * x$pop)
sum(x$util_opt * x$pop) / sum(x$util_stat * x$pop)
